#!/usr/bin/env ruby

# Similar to `gsutil -m cp -r`
# See https://github.com/GoogleCloudPlatform/gsutil

if ARGV.length == 0
    require_relative 'config'
    $token, $name, $delay, $dir, $strip = GOOGLE_TOKEN, GOOGLE_BUCKET, GOOGLE_DELAY, GOOGLE_DOWNLOAD_DIR, GOOGLE_APP_ID
elsif ARGV.length == 5
    $token, $name, $delay, $dir, $strip = ARGV
else
    raise 'expected arguments: access token, bucket name, delay, target directory, app id'
end
$delay = Float($delay)
$strip += '_' unless $strip.empty?

require 'google/cloud/storage'
require 'signet/oauth_2/client'
require 'date'
require 'fileutils'

$counts = Hash.new(0)
$lock = Mutex.new

def log key, name, err = nil
    puts "#{key} #{name} #{err}"
    $lock.synchronize do
        $counts[key] += 1
    end
end

$threads = []

def download(src)
    name = src.name.sub($strip, '')
    dst = File.join($dir, name)
    stime = src.updated_at.to_time
    dtime = File.exist?(dst) ? File.mtime(dst) : Time.at(0)
    if stime <= dtime
        log('OLD  ', name)
    else
        sleep($delay)
        $threads << Thread.new do
            tries = 0
            log('START', name)
            begin
                str = src.download
                str.set_encoding_by_bom
                FileUtils.mkdir_p(File.dirname(dst))
                IO.write(dst, str.read, mode: 'w:UTF-8')
                File.utime(stime, stime, dst)
                log('OK   ', name)
            rescue => e
                tries += 1
                if tries < 2
                    log('RETRY', name, e)
                    sleep(tries * $delay)
                    retry
                else
                    log('FAIL ', name, e)
                end
            end
        end
    end
end

storage = Google::Cloud::Storage.new(
    project_id: '?', # must not be empty, value doesn't matter
    credentials: Google::Cloud::Storage::Credentials.new(
        Signet::OAuth2::Client.new(
            token_credential_uri: 'https://oauth2.googleapis.com/token',
            # gsutil client values, other values don't work
            # see GetGsutilClientIdAndSecret() in gslib/utils/system_util.py
            client_id: '909320924072.apps.googleusercontent.com',
            client_secret: 'p3RlpR10xMFh9ZXBS/ZNLYUu',
            # token generated by gsutil config
            refresh_token: $token
        )
    )
)

bucket = storage.bucket($name)

bucket.files.all &method(:download)

$threads.each &:join

puts 'counts:'
$counts.each { |key, count| puts "#{key} #{count}" }
